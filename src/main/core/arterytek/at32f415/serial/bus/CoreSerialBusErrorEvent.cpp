/**
 * Copyright (c) 2020 ZxyKira
 * All rights reserved.
 * 
 * SPDX-License-Identifier: MIT
 */

/* ****************************************************************************************
 * Include
 */
 
#include "core/arterytek/at32f415/serial/bus/CoreSerialBusErrorEvent.h"

//-----------------------------------------------------------------------------------------
#include "mcuf.h"

//-----------------------------------------------------------------------------------------
#include "core/arterytek/at32f415/serial/bus/CoreSerialBus.h"

/* ****************************************************************************************
 * Macro
 */

/* ****************************************************************************************
 * Using
 */

using core::arterytek::at32f415::serial::bus::CoreSerialBusErrorEvent;

//-----------------------------------------------------------------------------------------

//-----------------------------------------------------------------------------------------
using core::arterytek::at32f415::serial::bus::CoreSerialBus;

/* ****************************************************************************************
 * Variable <Static>
 */

/* ****************************************************************************************
 * Construct Method
 */

/**
 * @brief Construct a new Core Serial Bus Error Event object
 * 
 * @param base 
 */
CoreSerialBusErrorEvent::CoreSerialBusErrorEvent(CoreSerialBus& base) construct 
  mBase(base){
}

/* ****************************************************************************************
 * Operator Method
 */

/* ****************************************************************************************
 * Public Method <Static>
 */

/* ****************************************************************************************
 * Public Method <Override> - mcuf::hal::InterruptEvent
 */

/**
 * @brief 
 * 
 */
void CoreSerialBusErrorEvent::interruptEvent(void){

}

/* ****************************************************************************************
 * Public Method
 */

/* ****************************************************************************************
 * Protected Method <Static>
 */

/* ****************************************************************************************
 * Protected Method <Override>
 */

/* ****************************************************************************************
 * Protected Method
 */

/* ****************************************************************************************
 * Private Method
 */

/* ****************************************************************************************
 * End of file
 */
