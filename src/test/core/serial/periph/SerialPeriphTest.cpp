/**
 * Copyright (c) 2020 ZxyKira
 * All rights reserved.
 * 
 * SPDX-License-Identifier: MIT
 */

/* ****************************************************************************************
 * Include
 */

//-----------------------------------------------------------------------------------------

//-----------------------------------------------------------------------------------------
#include "core/serial/periph/SerialPeriphTest.h"

/* ****************************************************************************************
 * Macro
 */

/* ****************************************************************************************
 * Using
 */

//-----------------------------------------------------------------------------------------
using namespace tool;

//-----------------------------------------------------------------------------------------
using core::serial::periph::SerialPeriphTest;

using mcuf::util::Stacker;



/* ****************************************************************************************
 * Variable <Static>
 */

/* ****************************************************************************************
 * Construct Method
 */

/**
 *
 */
SerialPeriphTest::SerialPeriphTest(Stacker& stacker) construct
  mStacker(stacker){
  
  this->boardPeriph = new(this->mStacker) BoardPeriph();
  this->console = new(this->mStacker) Console();
}
  
/**
 *
 */
SerialPeriphTest::~SerialPeriphTest(void){
}

/* ****************************************************************************************
 * Operator Method
 */

/* ****************************************************************************************
 * Public Method <Static>
 */

/* ****************************************************************************************
 * Public Method <Override> mcuf::function::Runnable
 */

/**
 *
 */
void SerialPeriphTest::run(void){

}

/* ****************************************************************************************
 * Public Method
 */

/* ****************************************************************************************
 * Protected Method <Static>
 */

/* ****************************************************************************************
 * Protected Method <Override>
 */

/* ****************************************************************************************
 * Protected Method
 */

/* ****************************************************************************************
 * Private Method
 */

/* ****************************************************************************************
 * End of file
 */
